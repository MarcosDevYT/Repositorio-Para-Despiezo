
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser"

export type * from '../models'
export type * from './prismaNamespace'

export const Decimal = runtime.Decimal


export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.DbNull),
  JsonNull: runtime.objectEnumValues.classes.JsonNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.JsonNull),
  AnyNull: runtime.objectEnumValues.classes.AnyNull as (new (secret: never) => typeof runtime.objectEnumValues.instances.AnyNull),
}
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull


export const ModelName = {
  User: 'User',
  Account: 'Account',
  VerificationToken: 'VerificationToken',
  PasswordResetToken: 'PasswordResetToken',
  Address: 'Address',
  Product: 'Product',
  Kit: 'Kit',
  KitProduct: 'KitProduct',
  UserProductView: 'UserProductView',
  Orden: 'Orden',
  OrderItem: 'OrderItem',
  Favorite: 'Favorite',
  SearchHistory: 'SearchHistory',
  SearchLog: 'SearchLog',
  Room: 'Room',
  Message: 'Message'
} as const

export type ModelName = (typeof ModelName)[keyof typeof ModelName]

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
} as const)

export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


export const UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  description: 'description',
  image: 'image',
  phoneNumber: 'phoneNumber',
  emailVerified: 'emailVerified',
  phoneVerified: 'phoneVerified',
  location: 'location',
  businessName: 'businessName',
  bussinesCategory: 'bussinesCategory',
  connectedAccountId: 'connectedAccountId',
  stripeConnectedLinked: 'stripeConnectedLinked',
  pro: 'pro',
  priceId: 'priceId',
  customerId: 'customerId',
  subscriptionId: 'subscriptionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


export const AccountScalarFieldEnum = {
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


export const VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
} as const

export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


export const PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expires: 'expires',
  createdAt: 'createdAt'
} as const

export type PasswordResetTokenScalarFieldEnum = (typeof PasswordResetTokenScalarFieldEnum)[keyof typeof PasswordResetTokenScalarFieldEnum]


export const AddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  street: 'street',
  number: 'number',
  city: 'city',
  postalCode: 'postalCode',
  country: 'country',
  isDefault: 'isDefault'
} as const

export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


export const ProductScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  images: 'images',
  oemNumber: 'oemNumber',
  brand: 'brand',
  model: 'model',
  year: 'year',
  tipoDeVehiculo: 'tipoDeVehiculo',
  condition: 'condition',
  status: 'status',
  typeOfPiece: 'typeOfPiece',
  location: 'location',
  category: 'category',
  subcategory: 'subcategory',
  offer: 'offer',
  offerPrice: 'offerPrice',
  weight: 'weight',
  length: 'length',
  width: 'width',
  height: 'height',
  featuredUntil: 'featuredUntil',
  featuredAt: 'featuredAt',
  clicks: 'clicks',
  vendorId: 'vendorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


export const KitScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  discount: 'discount',
  images: 'images',
  vendorId: 'vendorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type KitScalarFieldEnum = (typeof KitScalarFieldEnum)[keyof typeof KitScalarFieldEnum]


export const KitProductScalarFieldEnum = {
  id: 'id',
  kitId: 'kitId',
  productId: 'productId'
} as const

export type KitProductScalarFieldEnum = (typeof KitProductScalarFieldEnum)[keyof typeof KitProductScalarFieldEnum]


export const UserProductViewScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  productId: 'productId',
  viewedAt: 'viewedAt'
} as const

export type UserProductViewScalarFieldEnum = (typeof UserProductViewScalarFieldEnum)[keyof typeof UserProductViewScalarFieldEnum]


export const OrdenScalarFieldEnum = {
  id: 'id',
  buyerId: 'buyerId',
  vendorId: 'vendorId',
  stripeSessionId: 'stripeSessionId',
  stripePaymentIntent: 'stripePaymentIntent',
  amountTotal: 'amountTotal',
  vendorAmount: 'vendorAmount',
  feeAmount: 'feeAmount',
  status: 'status',
  payoutReleased: 'payoutReleased',
  trackingNumber: 'trackingNumber',
  trackingUrl: 'trackingUrl',
  shippingStatus: 'shippingStatus',
  shippingProvider: 'shippingProvider',
  shippingLabelUrl: 'shippingLabelUrl',
  despachadoAt: 'despachadoAt',
  shippingName: 'shippingName',
  shippingAddressLine1: 'shippingAddressLine1',
  shippingAddressLine2: 'shippingAddressLine2',
  shippingCity: 'shippingCity',
  shippingPostalCode: 'shippingPostalCode',
  shippingCountry: 'shippingCountry',
  shippingPhone: 'shippingPhone',
  releaseAt: 'releaseAt',
  releasedAt: 'releasedAt',
  stripeTransferId: 'stripeTransferId',
  refundRequested: 'refundRequested',
  refundProcessed: 'refundProcessed',
  refundStripeId: 'refundStripeId',
  buyerNote: 'buyerNote',
  vendorNote: 'vendorNote',
  orderType: 'orderType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type OrdenScalarFieldEnum = (typeof OrdenScalarFieldEnum)[keyof typeof OrdenScalarFieldEnum]


export const OrderItemScalarFieldEnum = {
  id: 'id',
  ordenId: 'ordenId',
  productId: 'productId',
  kitId: 'kitId',
  quantity: 'quantity'
} as const

export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


export const FavoriteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  productId: 'productId',
  createdAt: 'createdAt'
} as const

export type FavoriteScalarFieldEnum = (typeof FavoriteScalarFieldEnum)[keyof typeof FavoriteScalarFieldEnum]


export const SearchHistoryScalarFieldEnum = {
  id: 'id',
  query: 'query',
  userId: 'userId',
  createdAt: 'createdAt'
} as const

export type SearchHistoryScalarFieldEnum = (typeof SearchHistoryScalarFieldEnum)[keyof typeof SearchHistoryScalarFieldEnum]


export const SearchLogScalarFieldEnum = {
  id: 'id',
  query: 'query',
  clicks: 'clicks',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
} as const

export type SearchLogScalarFieldEnum = (typeof SearchLogScalarFieldEnum)[keyof typeof SearchLogScalarFieldEnum]


export const RoomScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  vendorId: 'vendorId',
  buyerId: 'buyerId',
  createdAt: 'createdAt'
} as const

export type RoomScalarFieldEnum = (typeof RoomScalarFieldEnum)[keyof typeof RoomScalarFieldEnum]


export const MessageScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  senderId: 'senderId',
  content: 'content',
  createdAt: 'createdAt'
} as const

export type MessageScalarFieldEnum = (typeof MessageScalarFieldEnum)[keyof typeof MessageScalarFieldEnum]


export const SortOrder = {
  asc: 'asc',
  desc: 'desc'
} as const

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


export const QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
} as const

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


export const NullsOrder = {
  first: 'first',
  last: 'last'
} as const

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]

